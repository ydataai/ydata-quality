name: Prerelease

on:
  release:
    types:
    - prereleased

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-20.04

    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
    - name: Version
      id: version
      run: echo ::set-output name=value::`echo ${{ github.ref }} | sed -n -E 's/refs\/tags\/build\/([0-9]+.[0-9]+.[0-9]+)\/([[:alnum:]])/\1.\2/p'`

  package:
    name: Build and Package
    runs-on: ubuntu-20.04

    needs: prepare

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel

    - name: Build package
      run: make package PYTHON=python version=${{ steps.version.outputs.value }}

    - name: Upload Pipeline Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: built-artifacts
        path: dist/
    
  upload-assets:
    name: Upload Assets to Release
    runs-on: ubuntu-20.04

    needs:
    - prepare
    - package

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: built-artifacts
        path: dist/

    - uses: AButler/upload-release-assets@v2.0
      with:
        files: 'dist/*'
        repo-token: ${{ secrets.ACCESS_TOKEN }}
        release-tag: ${{ needs.package.outputs.version }}

  publish-private-pypi:
    name: Publish packages to PyPi
    runs-on: ubuntu-20.04

    needs:
    - prepare
    - package

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: built-artifacts
        path: dist/

    - uses: pypa/gh-action-pypi-publish@v1.6.4
      with:
        user: ${{ secrets.PRIVATE_PYPI_USERNAME }}
        password: ${{ secrets.PRIVATE_PYPI_PASSWORD }}
        repository_url: ${{ secrets.PRIVATE_PYPI_URL }}
